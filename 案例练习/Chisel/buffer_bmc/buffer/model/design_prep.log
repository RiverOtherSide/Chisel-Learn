
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.35+24 (git sha1 7eea04779, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_prep.ys' --

1. Executing RTLIL frontend.
Input filename: design.il

2. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module buffer.
Found 0 SCCs in module ResetCounter.
Found 0 SCCs in module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001.
Found 0 SCCs.

3. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4. Executing MEMORY_NORDFF pass (extracting $dff cells from memories).

5. Executing ASYNC2SYNC pass.

6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \buffer..
Finding unused cells or wires in module \ResetCounter..
Finding unused cells or wires in module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001..
Removed 9 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

7. Executing FORMALFF pass.

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001..
Finding unused cells or wires in module \ResetCounter..
Finding unused cells or wires in module \buffer..
Removed 2 unused cells and 2 unused wires.
<suppressed ~4 debug messages>

9. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001...
Checking module ResetCounter...
Checking module buffer...
Found and reported 0 problems.

10. Executing SETUNDEF pass (replace undef values with defined constants).

11. Executing OPT pass (performing simple optimizations).

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001.
Optimizing module ResetCounter.
Optimizing module buffer.

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001'.
Finding identical cells in module `\ResetCounter'.
Finding identical cells in module `\buffer'.
Removed a total of 0 cells.

11.3. Executing OPT_DFF pass (perform DFF optimizations).

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001..
Finding unused cells or wires in module \ResetCounter..
Finding unused cells or wires in module \buffer..

11.5. Finished fast OPT passes.

12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\AnyConst\WIDTH=s32'00000000000000000000000000000001..
Finding unused cells or wires in module \ResetCounter..
Finding unused cells or wires in module \buffer..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

13. Executing RTLIL backend.
Output filename: ../model/design_prep.il

End of script. Logfile hash: 300e179693, CPU: user 0.02s system 0.02s
Yosys 0.35+24 (git sha1 7eea04779, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 34% 4x opt_clean (0 sec), 10% 1x opt_dff (0 sec), ...
