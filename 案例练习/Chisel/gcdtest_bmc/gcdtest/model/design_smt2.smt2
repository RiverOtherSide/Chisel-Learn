; SMT-LIBv2 description generated by Yosys 0.35+24 (git sha1 7eea04779, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module ResetCounter
(declare-sort |ResetCounter_s| 0)
(declare-fun |ResetCounter_is| (|ResetCounter_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["\\count"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 32}
(declare-fun |ResetCounter#0| (|ResetCounter_s|) (_ BitVec 32)) ; \count
; yosys-smt2-output timeSinceReset 32
; yosys-smt2-wire timeSinceReset 32
(define-fun |ResetCounter_n timeSinceReset| ((state |ResetCounter_s|)) (_ BitVec 32) (|ResetCounter#0| state))
(declare-fun |ResetCounter#1| (|ResetCounter_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset"], "smtname": "reset", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |ResetCounter_n reset| ((state |ResetCounter_s|)) Bool (|ResetCounter#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\flag"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |ResetCounter#2| (|ResetCounter_s|) (_ BitVec 1)) ; \flag
; yosys-smt2-output notChaos 1
; yosys-smt2-wire notChaos 1
(define-fun |ResetCounter_n notChaos| ((state |ResetCounter_s|)) Bool (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1))
; yosys-smt2-register flag 1
; yosys-smt2-wire flag 1
(define-fun |ResetCounter_n flag| ((state |ResetCounter_s|)) Bool (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1))
; yosys-smt2-register count 32
; yosys-smt2-wire count 32
(define-fun |ResetCounter_n count| ((state |ResetCounter_s|)) (_ BitVec 32) (|ResetCounter#0| state))
(declare-fun |ResetCounter#3| (|ResetCounter_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |ResetCounter_n clk| ((state |ResetCounter_s|)) Bool (|ResetCounter#3| state))
(define-fun |ResetCounter#4| ((state |ResetCounter_s|)) (_ BitVec 1) (bvnot (ite (|ResetCounter#3| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$232
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$233
(define-fun |ResetCounter_u 0| ((state |ResetCounter_s|)) Bool (or (= ((_ extract 0 0) (|ResetCounter#4| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$233
(define-fun |ResetCounter#5| ((state |ResetCounter_s|)) (_ BitVec 1) (ite (|ResetCounter#1| state) #b1 (|ResetCounter#2| state))) ; $0\flag[0:0]
(define-fun |ResetCounter#6| ((state |ResetCounter_s|)) (_ BitVec 32) (bvadd (|ResetCounter#0| state) #b00000000000000000000000000000001)) ; $add$ResetCounter.sv:24$110_Y
(define-fun |ResetCounter#7| ((state |ResetCounter_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1) (|ResetCounter#6| state) (|ResetCounter#0| state))) ; $procmux$115_Y
(define-fun |ResetCounter#8| ((state |ResetCounter_s|)) (_ BitVec 32) (ite (|ResetCounter#1| state) #b00000000000000000000000000000000 (|ResetCounter#7| state))) ; $0\count[31:0]
(define-fun |ResetCounter_a| ((state |ResetCounter_s|)) Bool true)
(define-fun |ResetCounter_u| ((state |ResetCounter_s|)) Bool 
  (|ResetCounter_u 0| state)
)
(define-fun |ResetCounter_i| ((state |ResetCounter_s|)) Bool (and
  (= (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1) false) ; flag
  (= (|ResetCounter#0| state) #b00000000000000000000000000000000) ; count
))
(define-fun |ResetCounter_h| ((state |ResetCounter_s|)) Bool true)
(define-fun |ResetCounter_t| ((state |ResetCounter_s|) (next_state |ResetCounter_s|)) Bool (and
  (= (|ResetCounter#5| state) (|ResetCounter#2| next_state)) ; $procdff$169 \flag
  (= (|ResetCounter#8| state) (|ResetCounter#0| next_state)) ; $procdff$168 \count
)) ; end of module ResetCounter
; yosys-smt2-module gcd
(declare-sort |gcd_s| 0)
(declare-fun |gcd_is| (|gcd_s|) Bool)
; yosys-smt2-anyinit gcd#0 8 gcdtest.sv:55.3-97.6
; yosys-smt2-witness {"offset": 0, "path": ["\\y"], "smtname": 0, "smtoffset": 0, "type": "init", "width": 8}
(declare-fun |gcd#0| (|gcd_s|) (_ BitVec 8)) ; \y
; yosys-smt2-anyinit gcd#1 3 gcdtest.sv:55.3-97.6
; yosys-smt2-witness {"offset": 0, "path": ["\\lsb"], "smtname": 1, "smtoffset": 0, "type": "init", "width": 3}
(declare-fun |gcd#1| (|gcd_s|) (_ BitVec 3)) ; \lsb
(define-fun |gcd#2| ((state |gcd_s|)) (_ BitVec 1) ((_ extract 0 0) (bvlshr (|gcd#0| state) (concat #b00000 (|gcd#1| state))))) ; \y_lsb
; yosys-smt2-wire y_lsb 1
(define-fun |gcd_n y_lsb| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#2| state)) #b1))
; yosys-smt2-register y 8
; yosys-smt2-wire y 8
(define-fun |gcd_n y| ((state |gcd_s|)) (_ BitVec 8) (|gcd#0| state))
; yosys-smt2-anyinit gcd#3 8 gcdtest.sv:55.3-97.6
; yosys-smt2-witness {"offset": 0, "path": ["\\x"], "smtname": 3, "smtoffset": 0, "type": "init", "width": 8}
(declare-fun |gcd#3| (|gcd_s|) (_ BitVec 8)) ; \x
(define-fun |gcd#4| ((state |gcd_s|)) (_ BitVec 1) ((_ extract 0 0) (bvlshr (|gcd#3| state) (concat #b00000 (|gcd#1| state))))) ; \x_lsb
; yosys-smt2-wire x_lsb 1
(define-fun |gcd_n x_lsb| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#4| state)) #b1))
; yosys-smt2-register x 8
; yosys-smt2-wire x 8
(define-fun |gcd_n x| ((state |gcd_s|)) (_ BitVec 8) (|gcd#3| state))
; yosys-smt2-anyinit gcd#5 1 gcdtest.sv:55.3-97.6
; yosys-smt2-witness {"offset": 0, "path": ["\\start"], "smtname": 5, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcd#5| (|gcd_s|) (_ BitVec 1)) ; \start
; yosys-smt2-register start 1
; yosys-smt2-wire start 1
(define-fun |gcd_n start| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#5| state)) #b1))
; yosys-smt2-cell ResetCounter resetCounter
; yosys-smt2-witness {"path": ["\\resetCounter"], "smtname": "resetCounter", "type": "cell"}
(declare-fun |gcd#6| (|gcd_s|) (_ BitVec 32)) ; \resetCounter_timeSinceReset
(declare-fun |gcd#7| (|gcd_s|) Bool) ; \resetCounter_notChaos
(declare-fun |gcd_h resetCounter| (|gcd_s|) |ResetCounter_s|)
; yosys-smt2-wire resetCounter_timeSinceReset 32
(define-fun |gcd_n resetCounter_timeSinceReset| ((state |gcd_s|)) (_ BitVec 32) (|gcd#6| state))
(declare-fun |gcd#8| (|gcd_s|) Bool) ; \reset
; yosys-smt2-wire resetCounter_reset 1
(define-fun |gcd_n resetCounter_reset| ((state |gcd_s|)) Bool (|gcd#8| state))
; yosys-smt2-wire resetCounter_notChaos 1
(define-fun |gcd_n resetCounter_notChaos| ((state |gcd_s|)) Bool (|gcd#7| state))
(declare-fun |gcd#9| (|gcd_s|) Bool) ; \clock
; yosys-smt2-wire resetCounter_clk 1
; yosys-smt2-clock resetCounter_clk posedge
(define-fun |gcd_n resetCounter_clk| ((state |gcd_s|)) Bool (|gcd#9| state))
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset"], "smtname": "reset", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |gcd_n reset| ((state |gcd_s|)) Bool (|gcd#8| state))
; yosys-smt2-register lsb 3
; yosys-smt2-wire lsb 3
(define-fun |gcd_n lsb| ((state |gcd_s|)) (_ BitVec 3) (|gcd#1| state))
(define-fun |gcd#10| ((state |gcd_s|)) Bool (bvult (|gcd#3| state) (|gcd#0| state))) ; \_diff_T
(define-fun |gcd#11| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#10| state) (|gcd#3| state) (|gcd#0| state))) ; \io_o
; yosys-smt2-output io_o 8
; yosys-smt2-wire io_o 8
(define-fun |gcd_n io_o| ((state |gcd_s|)) (_ BitVec 8) (|gcd#11| state))
(define-fun |gcd#12| ((state |gcd_s|)) Bool (= (|gcd#3| state) (|gcd#0| state))) ; \_io_done_T
(define-fun |gcd#13| ((state |gcd_s|)) Bool (not (or  (= ((_ extract 0 0) (|gcd#3| state)) #b1) (= ((_ extract 1 1) (|gcd#3| state)) #b1) (= ((_ extract 2 2) (|gcd#3| state)) #b1) (= ((_ extract 3 3) (|gcd#3| state)) #b1) (= ((_ extract 4 4) (|gcd#3| state)) #b1) (= ((_ extract 5 5) (|gcd#3| state)) #b1) (= ((_ extract 6 6) (|gcd#3| state)) #b1) (= ((_ extract 7 7) (|gcd#3| state)) #b1)))) ; \_io_done_T_1
(define-fun |gcd#14| ((state |gcd_s|)) (_ BitVec 1) (bvor (ite (|gcd#12| state) #b1 #b0) (ite (|gcd#13| state) #b1 #b0))) ; $or$gcdtest.sv:52$78_Y
(define-fun |gcd#15| ((state |gcd_s|)) Bool (not (or  (= ((_ extract 0 0) (|gcd#0| state)) #b1) (= ((_ extract 1 1) (|gcd#0| state)) #b1) (= ((_ extract 2 2) (|gcd#0| state)) #b1) (= ((_ extract 3 3) (|gcd#0| state)) #b1) (= ((_ extract 4 4) (|gcd#0| state)) #b1) (= ((_ extract 5 5) (|gcd#0| state)) #b1) (= ((_ extract 6 6) (|gcd#0| state)) #b1) (= ((_ extract 7 7) (|gcd#0| state)) #b1)))) ; \_io_done_T_3
(define-fun |gcd#16| ((state |gcd_s|)) (_ BitVec 1) (bvor (|gcd#14| state) (ite (|gcd#15| state) #b1 #b0))) ; \io_done
; yosys-smt2-output io_done 1
; yosys-smt2-wire io_done 1
(define-fun |gcd_n io_done| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#16| state)) #b1))
(define-fun |gcd#17| ((state |gcd_s|)) (_ BitVec 8) (bvsub (|gcd#3| state) (|gcd#0| state))) ; \_diff_T_4
(define-fun |gcd#18| ((state |gcd_s|)) (_ BitVec 8) (bvsub (|gcd#0| state) (|gcd#3| state))) ; \_diff_T_2
(define-fun |gcd#19| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#10| state) (|gcd#18| state) (|gcd#17| state))) ; \diff
; yosys-smt2-wire diff 8
(define-fun |gcd_n diff| ((state |gcd_s|)) (_ BitVec 8) (|gcd#19| state))
; yosys-smt2-input clock 1
; yosys-smt2-wire clock 1
; yosys-smt2-clock clock posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |gcd_n clock| ((state |gcd_s|)) Bool (|gcd#9| state))
(declare-fun |gcd#20| (|gcd_s|) (_ BitVec 7)) ; \_y_lsb_T [7:1]
; yosys-smt2-wire _y_lsb_T 8
(define-fun |gcd_n _y_lsb_T| ((state |gcd_s|)) (_ BitVec 8) (concat (|gcd#20| state) (|gcd#2| state)))
; yosys-smt2-wire _y_T_1 7
(define-fun |gcd_n _y_T_1| ((state |gcd_s|)) (_ BitVec 7) ((_ extract 7 1) (|gcd#19| state)))
; yosys-smt2-wire _y_T 7
(define-fun |gcd_n _y_T| ((state |gcd_s|)) (_ BitVec 7) ((_ extract 7 1) (|gcd#0| state)))
(declare-fun |gcd#21| (|gcd_s|) (_ BitVec 7)) ; \_x_lsb_T [7:1]
; yosys-smt2-wire _x_lsb_T 8
(define-fun |gcd_n _x_lsb_T| ((state |gcd_s|)) (_ BitVec 8) (concat (|gcd#21| state) (|gcd#4| state)))
; yosys-smt2-wire _x_T 7
(define-fun |gcd_n _x_T| ((state |gcd_s|)) (_ BitVec 7) ((_ extract 7 1) (|gcd#3| state)))
; yosys-smt2-anyseq gcd#22 1 $auto$setundef.cc:533:execute$215
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_215"], "smtname": 22, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |gcd#22| (|gcd_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_215
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_215 1
(define-fun |gcd_n _witness_.anyseq_auto_setundef_cc_533_execute_215| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#22| state)) #b1))
; yosys-smt2-anyinit gcd#23 1 gcdtest.sv:149.3-154.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_170"], "smtname": 23, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcd#23| (|gcd_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_170
; yosys-smt2-register _witness_.anyinit_procdff_170 1
; yosys-smt2-wire _witness_.anyinit_procdff_170 1
(define-fun |gcd_n _witness_.anyinit_procdff_170| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#23| state)) #b1))
(define-fun |gcd#24| ((state |gcd_s|)) (_ BitVec 3) (bvadd (|gcd#1| state) #b001)) ; \_lsb_T_1
; yosys-smt2-wire _lsb_T_1 3
(define-fun |gcd_n _lsb_T_1| ((state |gcd_s|)) (_ BitVec 3) (|gcd#24| state))
; yosys-smt2-wire _io_done_T_3 1
(define-fun |gcd_n _io_done_T_3| ((state |gcd_s|)) Bool (|gcd#15| state))
; yosys-smt2-wire _io_done_T_1 1
(define-fun |gcd_n _io_done_T_1| ((state |gcd_s|)) Bool (|gcd#13| state))
; yosys-smt2-wire _io_done_T 1
(define-fun |gcd_n _io_done_T| ((state |gcd_s|)) Bool (|gcd#12| state))
; yosys-smt2-wire _diff_T_4 8
(define-fun |gcd_n _diff_T_4| ((state |gcd_s|)) (_ BitVec 8) (|gcd#17| state))
; yosys-smt2-wire _diff_T_2 8
(define-fun |gcd_n _diff_T_2| ((state |gcd_s|)) (_ BitVec 8) (|gcd#18| state))
; yosys-smt2-wire _diff_T 1
(define-fun |gcd_n _diff_T| ((state |gcd_s|)) Bool (|gcd#10| state))
; yosys-smt2-wire _T_6 2
(define-fun |gcd_n _T_6| ((state |gcd_s|)) (_ BitVec 2) (concat (|gcd#4| state) (|gcd#2| state)))
(define-fun |gcd#25| ((state |gcd_s|)) (_ BitVec 1) (bvnot (ite (|gcd#8| state) #b1 #b0))) ; \_T_18
; yosys-smt2-wire _T_18 1
(define-fun |gcd_n _T_18| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#25| state)) #b1))
(define-fun |gcd#26| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#10| state) (|gcd#3| state) (concat #b0 ((_ extract 7 1) (|gcd#19| state))))) ; \_GEN_1
(define-fun |gcd#27| ((state |gcd_s|)) Bool (= #b11 (concat (|gcd#4| state) (|gcd#2| state)))) ; $eq$gcdtest.sv:39$65_Y
(define-fun |gcd#28| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#27| state) (|gcd#26| state) (|gcd#3| state))) ; \_GEN_3
(define-fun |gcd#29| ((state |gcd_s|)) Bool (= #b10 (concat (|gcd#4| state) (|gcd#2| state)))) ; $eq$gcdtest.sv:41$69_Y
(define-fun |gcd#30| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#29| state) (|gcd#3| state) (|gcd#28| state))) ; \_GEN_5
; yosys-smt2-wire _GEN_5 8
(define-fun |gcd_n _GEN_5| ((state |gcd_s|)) (_ BitVec 8) (|gcd#30| state))
(define-fun |gcd#31| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#10| state) (concat #b0 ((_ extract 7 1) (|gcd#19| state))) (|gcd#0| state))) ; \_GEN_0
(define-fun |gcd#32| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#27| state) (|gcd#31| state) (|gcd#0| state))) ; \_GEN_2
(define-fun |gcd#33| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#29| state) (concat #b0 ((_ extract 7 1) (|gcd#0| state))) (|gcd#32| state))) ; \_GEN_4
; yosys-smt2-wire _GEN_4 8
(define-fun |gcd_n _GEN_4| ((state |gcd_s|)) (_ BitVec 8) (|gcd#33| state))
; yosys-smt2-wire _GEN_3 8
(define-fun |gcd_n _GEN_3| ((state |gcd_s|)) (_ BitVec 8) (|gcd#28| state))
; yosys-smt2-wire _GEN_2 8
(define-fun |gcd_n _GEN_2| ((state |gcd_s|)) (_ BitVec 8) (|gcd#32| state))
; yosys-smt2-wire _GEN_16 1
(define-fun |gcd_n _GEN_16| ((state |gcd_s|)) Bool false)
; yosys-smt2-wire _GEN_1 8
(define-fun |gcd_n _GEN_1| ((state |gcd_s|)) (_ BitVec 8) (|gcd#26| state))
; yosys-smt2-wire _GEN_0 8
(define-fun |gcd_n _GEN_0| ((state |gcd_s|)) (_ BitVec 8) (|gcd#31| state))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$gcdtest.sv:151$51_EN"], "smtname": 34, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |gcd#34| (|gcd_s|) (_ BitVec 1)) ; $formal$gcdtest.sv:151$51_EN
; yosys-smt2-register $formal$gcdtest.sv:151$51_EN 1
(define-fun |gcd_n $formal$gcdtest.sv:151$51_EN| ((state |gcd_s|)) Bool (= ((_ extract 0 0) (|gcd#34| state)) #b1))
(define-fun |gcd#35| ((state |gcd_s|)) (_ BitVec 1) (bvnot (ite (|gcd#9| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$229
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$230
(define-fun |gcd_u 0| ((state |gcd_s|)) Bool (or (= ((_ extract 0 0) (|gcd#35| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$230
; yosys-smt2-assert 0 $assert$gcdtest.sv:151$106 gcdtest.sv:151.55-152.22
(define-fun |gcd_a 0| ((state |gcd_s|)) Bool (or (= ((_ extract 0 0) (|gcd#23| state)) #b1) (not (= ((_ extract 0 0) (|gcd#34| state)) #b1)))) ; $assert$gcdtest.sv:151$106
(define-fun |gcd#36| ((state |gcd_s|)) (_ BitVec 1) (bvand (|gcd#16| state) (ite (|gcd#7| state) #b1 #b0))) ; $and$gcdtest.sv:151$104_Y
(define-fun |gcd#37| ((state |gcd_s|)) (_ BitVec 1) (bvand (|gcd#36| state) (|gcd#25| state))) ; $and$gcdtest.sv:151$105_Y
(define-fun |gcd#38| ((state |gcd_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcd#37| state)) #b1) #b1 #b0)) ; $0$formal$gcdtest.sv:151$51_EN[0:0]$103
(define-fun |gcd#39| ((state |gcd_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcd#37| state)) #b1) (|gcd#16| state) (|gcd#22| state))) ; $0$formal$gcdtest.sv:151$51_CHECK[0:0]$102
(define-fun |gcd#40| ((state |gcd_s|)) Bool (= #b01 (concat (|gcd#4| state) (|gcd#2| state)))) ; $eq$gcdtest.sv:69$92_Y
(define-fun |gcd#41| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#40| state) (concat #b0 ((_ extract 7 1) (|gcd#3| state))) (|gcd#30| state))) ; $procmux$134_Y
(define-fun |gcd#42| ((state |gcd_s|)) Bool (not (or  (= ((_ extract 0 0) (|gcd#2| state)) #b1) (= ((_ extract 0 0) (|gcd#4| state)) #b1)))) ; $eq$gcdtest.sv:60$86_Y
(define-fun |gcd#43| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#42| state) (|gcd#3| state) (|gcd#41| state))) ; $procmux$136_Y
(define-fun |gcd#44| ((state |gcd_s|)) (_ BitVec 1) (bvnot (ite (|gcd#12| state) #b1 #b0))) ; $not$gcdtest.sv:59$83_Y
(define-fun |gcd#45| ((state |gcd_s|)) (_ BitVec 1) (bvor (|gcd#44| state) (ite (|gcd#13| state) #b1 #b0))) ; $or$gcdtest.sv:59$84_Y
(define-fun |gcd#46| ((state |gcd_s|)) (_ BitVec 1) (bvor (|gcd#45| state) (ite (|gcd#15| state) #b1 #b0))) ; $or$gcdtest.sv:59$85_Y
(define-fun |gcd#47| ((state |gcd_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|gcd#46| state)) #b1) (|gcd#43| state) (|gcd#3| state))) ; $procmux$138_Y
(define-fun |gcd#48| ((state |gcd_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|gcd#5| state)) #b1) #b00011100 (|gcd#47| state))) ; $0\x[7:0]
(define-fun |gcd#49| ((state |gcd_s|)) (_ BitVec 3) (ite (|gcd#42| state) (|gcd#24| state) (|gcd#1| state))) ; $procmux$143_Y
(define-fun |gcd#50| ((state |gcd_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|gcd#46| state)) #b1) (|gcd#49| state) (|gcd#1| state))) ; $procmux$145_Y
(define-fun |gcd#51| ((state |gcd_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|gcd#5| state)) #b1) (|gcd#1| state) (|gcd#50| state))) ; $procmux$147_Y
(define-fun |gcd#52| ((state |gcd_s|)) (_ BitVec 3) (ite (|gcd#8| state) #b000 (|gcd#51| state))) ; $0\lsb[2:0]
(define-fun |gcd#53| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#40| state) (|gcd#0| state) (|gcd#33| state))) ; $procmux$124_Y
(define-fun |gcd#54| ((state |gcd_s|)) (_ BitVec 8) (ite (|gcd#42| state) (|gcd#0| state) (|gcd#53| state))) ; $procmux$126_Y
(define-fun |gcd#55| ((state |gcd_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|gcd#46| state)) #b1) (|gcd#54| state) (|gcd#0| state))) ; $procmux$128_Y
(define-fun |gcd#56| ((state |gcd_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|gcd#5| state)) #b1) #b00001100 (|gcd#55| state))) ; $0\y[7:0]
(define-fun |gcd_a| ((state |gcd_s|)) Bool (and
  (|gcd_a 0| state)
  (|ResetCounter_a| (|gcd_h resetCounter| state))
))
(define-fun |gcd_u| ((state |gcd_s|)) Bool (and
  (|gcd_u 0| state)
  (|ResetCounter_u| (|gcd_h resetCounter| state))
))
(define-fun |gcd_i| ((state |gcd_s|)) Bool (and
  (= (= ((_ extract 0 0) (|gcd#34| state)) #b1) false) ; $formal$gcdtest.sv:151$51_EN
  (|ResetCounter_i| (|gcd_h resetCounter| state))
))
(define-fun |gcd_h| ((state |gcd_s|)) Bool (and
  (= (|gcd_is| state) (|ResetCounter_is| (|gcd_h resetCounter| state)))
  (= (|gcd#6| state) (|ResetCounter_n timeSinceReset| (|gcd_h resetCounter| state))) ; ResetCounter.timeSinceReset
  (= (|gcd#8| state) (|ResetCounter_n reset| (|gcd_h resetCounter| state))) ; ResetCounter.reset
  (= (|gcd#7| state) (|ResetCounter_n notChaos| (|gcd_h resetCounter| state))) ; ResetCounter.notChaos
  (= (|gcd#9| state) (|ResetCounter_n clk| (|gcd_h resetCounter| state))) ; ResetCounter.clk
  (|ResetCounter_h| (|gcd_h resetCounter| state))
))
(define-fun |gcd_t| ((state |gcd_s|) (next_state |gcd_s|)) Bool (and
  (= (|gcd#38| state) (|gcd#34| next_state)) ; $procdff$171 $formal$gcdtest.sv:151$51_EN
  (= (|gcd#39| state) (|gcd#23| next_state)) ; $procdff$170 \_witness_.anyinit_procdff_170
  (= (ite (|gcd#8| state) #b1 #b0) (|gcd#5| next_state)) ; $procdff$175 \start
  (= (|gcd#48| state) (|gcd#3| next_state)) ; $procdff$173 \x
  (= (|gcd#52| state) (|gcd#1| next_state)) ; $procdff$172 \lsb
  (= (|gcd#56| state) (|gcd#0| next_state)) ; $procdff$174 \y
  (|ResetCounter_t| (|gcd_h resetCounter| state) (|gcd_h resetCounter| next_state))
)) ; end of module gcd
; yosys-smt2-module gcdtest
(declare-sort |gcdtest_s| 0)
(declare-fun |gcdtest_is| (|gcdtest_s|) Bool)
; yosys-smt2-cell ResetCounter resetCounter
; yosys-smt2-witness {"path": ["\\resetCounter"], "smtname": "resetCounter", "type": "cell"}
(declare-fun |gcdtest#0| (|gcdtest_s|) (_ BitVec 32)) ; \resetCounter_timeSinceReset
(declare-fun |gcdtest#1| (|gcdtest_s|) Bool) ; \resetCounter_notChaos
(declare-fun |gcdtest_h resetCounter| (|gcdtest_s|) |ResetCounter_s|)
; yosys-smt2-wire resetCounter_timeSinceReset 32
(define-fun |gcdtest_n resetCounter_timeSinceReset| ((state |gcdtest_s|)) (_ BitVec 32) (|gcdtest#0| state))
(declare-fun |gcdtest#2| (|gcdtest_s|) Bool) ; \reset
; yosys-smt2-wire resetCounter_reset 1
(define-fun |gcdtest_n resetCounter_reset| ((state |gcdtest_s|)) Bool (|gcdtest#2| state))
; yosys-smt2-wire resetCounter_notChaos 1
(define-fun |gcdtest_n resetCounter_notChaos| ((state |gcdtest_s|)) Bool (|gcdtest#1| state))
(declare-fun |gcdtest#3| (|gcdtest_s|) Bool) ; \clock
; yosys-smt2-wire resetCounter_clk 1
; yosys-smt2-clock resetCounter_clk posedge
(define-fun |gcdtest_n resetCounter_clk| ((state |gcdtest_s|)) Bool (|gcdtest#3| state))
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset"], "smtname": "reset", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |gcdtest_n reset| ((state |gcdtest_s|)) Bool (|gcdtest#2| state))
; yosys-smt2-wire dut_reset 1
(define-fun |gcdtest_n dut_reset| ((state |gcdtest_s|)) Bool (|gcdtest#2| state))
; yosys-smt2-cell gcd dut
; yosys-smt2-witness {"path": ["\\dut"], "smtname": "dut", "type": "cell"}
(declare-fun |gcdtest#4| (|gcdtest_s|) (_ BitVec 8)) ; \dut_io_o
(declare-fun |gcdtest#5| (|gcdtest_s|) Bool) ; \dut_io_done
(declare-fun |gcdtest_h dut| (|gcdtest_s|) |gcd_s|)
; yosys-smt2-wire dut_io_o 8
(define-fun |gcdtest_n dut_io_o| ((state |gcdtest_s|)) (_ BitVec 8) (|gcdtest#4| state))
; yosys-smt2-wire dut_io_done 1
(define-fun |gcdtest_n dut_io_done| ((state |gcdtest_s|)) Bool (|gcdtest#5| state))
; yosys-smt2-wire dut_clock 1
; yosys-smt2-clock dut_clock posedge
(define-fun |gcdtest_n dut_clock| ((state |gcdtest_s|)) Bool (|gcdtest#3| state))
; yosys-smt2-input clock 1
; yosys-smt2-wire clock 1
; yosys-smt2-clock clock posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |gcdtest_n clock| ((state |gcdtest_s|)) Bool (|gcdtest#3| state))
; yosys-smt2-anyseq gcdtest#6 1 $auto$setundef.cc:533:execute$223
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_223"], "smtname": 6, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |gcdtest#6| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_223
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_223 1
(define-fun |gcdtest_n _witness_.anyseq_auto_setundef_cc_533_execute_223| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#6| state)) #b1))
; yosys-smt2-anyseq gcdtest#7 1 $auto$setundef.cc:533:execute$221
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_221"], "smtname": 7, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |gcdtest#7| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_221
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_221 1
(define-fun |gcdtest_n _witness_.anyseq_auto_setundef_cc_533_execute_221| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#7| state)) #b1))
; yosys-smt2-anyseq gcdtest#8 1 $auto$setundef.cc:533:execute$219
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_219"], "smtname": 8, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |gcdtest#8| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_219
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_219 1
(define-fun |gcdtest_n _witness_.anyseq_auto_setundef_cc_533_execute_219| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#8| state)) #b1))
; yosys-smt2-anyseq gcdtest#9 1 $auto$setundef.cc:533:execute$217
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_217"], "smtname": 9, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |gcdtest#9| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_217
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_217 1
(define-fun |gcdtest_n _witness_.anyseq_auto_setundef_cc_533_execute_217| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#9| state)) #b1))
; yosys-smt2-anyinit gcdtest#10 1 gcdtest.sv:235.3-252.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_182"], "smtname": 10, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcdtest#10| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_182
; yosys-smt2-register _witness_.anyinit_procdff_182 1
; yosys-smt2-wire _witness_.anyinit_procdff_182 1
(define-fun |gcdtest_n _witness_.anyinit_procdff_182| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#10| state)) #b1))
; yosys-smt2-anyinit gcdtest#11 1 gcdtest.sv:235.3-252.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_180"], "smtname": 11, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcdtest#11| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_180
; yosys-smt2-register _witness_.anyinit_procdff_180 1
; yosys-smt2-wire _witness_.anyinit_procdff_180 1
(define-fun |gcdtest_n _witness_.anyinit_procdff_180| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#11| state)) #b1))
; yosys-smt2-anyinit gcdtest#12 1 gcdtest.sv:235.3-252.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_178"], "smtname": 12, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcdtest#12| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_178
; yosys-smt2-register _witness_.anyinit_procdff_178 1
; yosys-smt2-wire _witness_.anyinit_procdff_178 1
(define-fun |gcdtest_n _witness_.anyinit_procdff_178| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#12| state)) #b1))
; yosys-smt2-anyinit gcdtest#13 1 gcdtest.sv:235.3-252.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_176"], "smtname": 13, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |gcdtest#13| (|gcdtest_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_176
; yosys-smt2-register _witness_.anyinit_procdff_176 1
; yosys-smt2-wire _witness_.anyinit_procdff_176 1
(define-fun |gcdtest_n _witness_.anyinit_procdff_176| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#13| state)) #b1))
(define-fun |gcdtest#14| ((state |gcdtest_s|)) (_ BitVec 1) (bvnot (ite (|gcdtest#2| state) #b1 #b0))) ; \_T_4
; yosys-smt2-wire _T_4 1
(define-fun |gcdtest_n _T_4| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#14| state)) #b1))
(define-fun |gcdtest#15| ((state |gcdtest_s|)) Bool (= (|gcdtest#0| state) #b00000000000000000000000000000001)) ; $eq$gcdtest.sv:168$5_Y
(define-fun |gcdtest#16| ((state |gcdtest_s|)) (_ BitVec 1) (bvand (ite (|gcdtest#1| state) #b1 #b0) (ite (|gcdtest#15| state) #b1 #b0))) ; \_T_2
; yosys-smt2-wire _T_2 1
(define-fun |gcdtest_n _T_2| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#16| state)) #b1))
(define-fun |gcdtest#17| ((state |gcdtest_s|)) Bool (= (|gcdtest#0| state) #b00000000000000000000000000000110)) ; $eq$gcdtest.sv:170$8_Y
(define-fun |gcdtest#18| ((state |gcdtest_s|)) (_ BitVec 1) (bvand (ite (|gcdtest#1| state) #b1 #b0) (ite (|gcdtest#17| state) #b1 #b0))) ; \_T_14
; yosys-smt2-wire _T_14 1
(define-fun |gcdtest_n _T_14| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#18| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$gcdtest.sv:245$3_EN"], "smtname": 19, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |gcdtest#19| (|gcdtest_s|) (_ BitVec 1)) ; $formal$gcdtest.sv:245$3_EN
; yosys-smt2-register $formal$gcdtest.sv:245$3_EN 1
(define-fun |gcdtest_n $formal$gcdtest.sv:245$3_EN| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#19| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$gcdtest.sv:237$1_EN"], "smtname": 20, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |gcdtest#20| (|gcdtest_s|) (_ BitVec 1)) ; $formal$gcdtest.sv:237$1_EN
; yosys-smt2-register $formal$gcdtest.sv:237$1_EN 1
(define-fun |gcdtest_n $formal$gcdtest.sv:237$1_EN| ((state |gcdtest_s|)) Bool (= ((_ extract 0 0) (|gcdtest#20| state)) #b1))
(define-fun |gcdtest#21| ((state |gcdtest_s|)) (_ BitVec 1) (bvnot (ite (|gcdtest#3| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$226
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$227
(define-fun |gcdtest_u 0| ((state |gcdtest_s|)) Bool (or (= ((_ extract 0 0) (|gcdtest#21| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$227
; yosys-smt2-assert 0 $assert$gcdtest.sv:249$42 gcdtest.sv:249.28-250.26
(define-fun |gcdtest_a 0| ((state |gcdtest_s|)) Bool (or (= ((_ extract 0 0) (|gcdtest#10| state)) #b1) (not (= ((_ extract 0 0) (|gcdtest#19| state)) #b1)))) ; $assert$gcdtest.sv:249$42
; yosys-smt2-assert 1 $assert$gcdtest.sv:245$41 gcdtest.sv:245.83-246.31
(define-fun |gcdtest_a 1| ((state |gcdtest_s|)) Bool (or (= ((_ extract 0 0) (|gcdtest#11| state)) #b1) (not (= ((_ extract 0 0) (|gcdtest#19| state)) #b1)))) ; $assert$gcdtest.sv:245$41
; yosys-smt2-assert 2 $assert$gcdtest.sv:241$40 gcdtest.sv:241.27-242.27
(define-fun |gcdtest_a 2| ((state |gcdtest_s|)) Bool (or (= ((_ extract 0 0) (|gcdtest#12| state)) #b1) (not (= ((_ extract 0 0) (|gcdtest#20| state)) #b1)))) ; $assert$gcdtest.sv:241$40
; yosys-smt2-assert 3 $assert$gcdtest.sv:237$39 gcdtest.sv:237.85-238.31
(define-fun |gcdtest_a 3| ((state |gcdtest_s|)) Bool (or (= ((_ extract 0 0) (|gcdtest#13| state)) #b1) (not (= ((_ extract 0 0) (|gcdtest#20| state)) #b1)))) ; $assert$gcdtest.sv:237$39
(define-fun |gcdtest#22| ((state |gcdtest_s|)) (_ BitVec 1) (bvand (|gcdtest#16| state) (|gcdtest#14| state))) ; $and$gcdtest.sv:237$30_Y
(define-fun |gcdtest#23| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#22| state)) #b1) #b1 #b0)) ; $0$formal$gcdtest.sv:237$1_EN[0:0]$20
(define-fun |gcdtest#24| ((state |gcdtest_s|)) (_ BitVec 1) (bvand (|gcdtest#18| state) (|gcdtest#14| state))) ; $and$gcdtest.sv:245$36_Y
(define-fun |gcdtest#25| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#24| state)) #b1) #b1 #b0)) ; $0$formal$gcdtest.sv:245$3_EN[0:0]$24
(define-fun |gcdtest#26| ((state |gcdtest_s|)) Bool (= (|gcdtest#4| state) #b00001100)) ; $eq$gcdtest.sv:238$31_Y
(define-fun |gcdtest#27| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#22| state)) #b1) (ite (|gcdtest#26| state) #b1 #b0) (|gcdtest#9| state))) ; $0$formal$gcdtest.sv:237$1_CHECK[0:0]$19
(define-fun |gcdtest#28| ((state |gcdtest_s|)) (_ BitVec 1) (bvnot (ite (|gcdtest#5| state) #b1 #b0))) ; $not$gcdtest.sv:242$33_Y
(define-fun |gcdtest#29| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#22| state)) #b1) (|gcdtest#28| state) (|gcdtest#8| state))) ; $0$formal$gcdtest.sv:241$2_CHECK[0:0]$21
(define-fun |gcdtest#30| ((state |gcdtest_s|)) Bool (= (|gcdtest#4| state) #b00000100)) ; $eq$gcdtest.sv:246$37_Y
(define-fun |gcdtest#31| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#24| state)) #b1) (ite (|gcdtest#30| state) #b1 #b0) (|gcdtest#7| state))) ; $0$formal$gcdtest.sv:245$3_CHECK[0:0]$23
(define-fun |gcdtest#32| ((state |gcdtest_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|gcdtest#24| state)) #b1) (ite (|gcdtest#5| state) #b1 #b0) (|gcdtest#6| state))) ; $0$formal$gcdtest.sv:249$4_CHECK[0:0]$25
(define-fun |gcdtest_a| ((state |gcdtest_s|)) Bool (and
  (|gcdtest_a 0| state)
  (|gcdtest_a 1| state)
  (|gcdtest_a 2| state)
  (|gcdtest_a 3| state)
  (|gcd_a| (|gcdtest_h dut| state))
  (|ResetCounter_a| (|gcdtest_h resetCounter| state))
))
(define-fun |gcdtest_u| ((state |gcdtest_s|)) Bool (and
  (|gcdtest_u 0| state)
  (|gcd_u| (|gcdtest_h dut| state))
  (|ResetCounter_u| (|gcdtest_h resetCounter| state))
))
(define-fun |gcdtest_i| ((state |gcdtest_s|)) Bool (and
  (= (= ((_ extract 0 0) (|gcdtest#19| state)) #b1) false) ; $formal$gcdtest.sv:245$3_EN
  (= (= ((_ extract 0 0) (|gcdtest#20| state)) #b1) false) ; $formal$gcdtest.sv:237$1_EN
  (|gcd_i| (|gcdtest_h dut| state))
  (|ResetCounter_i| (|gcdtest_h resetCounter| state))
))
(define-fun |gcdtest_h| ((state |gcdtest_s|)) Bool (and
  (= (|gcdtest_is| state) (|gcd_is| (|gcdtest_h dut| state)))
  (= (|gcdtest#2| state) (|gcd_n reset| (|gcdtest_h dut| state))) ; gcd.reset
  (= (|gcdtest#4| state) (|gcd_n io_o| (|gcdtest_h dut| state))) ; gcd.io_o
  (= (|gcdtest#5| state) (|gcd_n io_done| (|gcdtest_h dut| state))) ; gcd.io_done
  (= (|gcdtest#3| state) (|gcd_n clock| (|gcdtest_h dut| state))) ; gcd.clock
  (= (|gcdtest_is| state) (|ResetCounter_is| (|gcdtest_h resetCounter| state)))
  (= (|gcdtest#0| state) (|ResetCounter_n timeSinceReset| (|gcdtest_h resetCounter| state))) ; ResetCounter.timeSinceReset
  (= (|gcdtest#2| state) (|ResetCounter_n reset| (|gcdtest_h resetCounter| state))) ; ResetCounter.reset
  (= (|gcdtest#1| state) (|ResetCounter_n notChaos| (|gcdtest_h resetCounter| state))) ; ResetCounter.notChaos
  (= (|gcdtest#3| state) (|ResetCounter_n clk| (|gcdtest_h resetCounter| state))) ; ResetCounter.clk
  (|gcd_h| (|gcdtest_h dut| state))
  (|ResetCounter_h| (|gcdtest_h resetCounter| state))
))
(define-fun |gcdtest_t| ((state |gcdtest_s|) (next_state |gcdtest_s|)) Bool (and
  (= (|gcdtest#23| state) (|gcdtest#20| next_state)) ; $procdff$177 $formal$gcdtest.sv:237$1_EN
  (= (|gcdtest#25| state) (|gcdtest#19| next_state)) ; $procdff$181 $formal$gcdtest.sv:245$3_EN
  (= (|gcdtest#27| state) (|gcdtest#13| next_state)) ; $procdff$176 \_witness_.anyinit_procdff_176
  (= (|gcdtest#29| state) (|gcdtest#12| next_state)) ; $procdff$178 \_witness_.anyinit_procdff_178
  (= (|gcdtest#31| state) (|gcdtest#11| next_state)) ; $procdff$180 \_witness_.anyinit_procdff_180
  (= (|gcdtest#32| state) (|gcdtest#10| next_state)) ; $procdff$182 \_witness_.anyinit_procdff_182
  (|gcd_t| (|gcdtest_h dut| state) (|gcdtest_h dut| next_state))
  (|ResetCounter_t| (|gcdtest_h resetCounter| state) (|gcdtest_h resetCounter| next_state))
)) ; end of module gcdtest
; yosys-smt2-topmod gcdtest
; end of yosys output
