; SMT-LIBv2 description generated by Yosys 0.35+24 (git sha1 7eea04779, aarch64-apple-darwin20.2-clang 10.0.0-4ubuntu1 -fPIC -Os)
; yosys-smt2-module $paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010
(declare-sort |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s| 0)
(declare-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_is| (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|) Bool)
; yosys-smt2-anyconst $paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0 2 AnyConst.sv:0.0-0.0 cst
; yosys-smt2-witness {"offset": 0, "path": ["\\out"], "smtname": 0, "smtoffset": 0, "type": "init", "width": 2}
(declare-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0| (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|) (_ BitVec 2)) ; \out
; yosys-smt2-output out 2
; yosys-smt2-wire out 2
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_n out| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) (_ BitVec 2) (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0| state))
; yosys-smt2-wire cst 2
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_n cst| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) (_ BitVec 2) (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0| state))
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_a| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) Bool true)
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_u| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) Bool true)
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_i| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) Bool true)
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_h| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) Bool true)
(define-fun |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_t| ((state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|) (next_state |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)) Bool 
  (= (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0| state) (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010#0| next_state)) ; $anyconst$44 \out
) ; end of module $paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010
; yosys-smt2-module ResetCounter
(declare-sort |ResetCounter_s| 0)
(declare-fun |ResetCounter_is| (|ResetCounter_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["\\count"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 32}
(declare-fun |ResetCounter#0| (|ResetCounter_s|) (_ BitVec 32)) ; \count
; yosys-smt2-output timeSinceReset 32
; yosys-smt2-wire timeSinceReset 32
(define-fun |ResetCounter_n timeSinceReset| ((state |ResetCounter_s|)) (_ BitVec 32) (|ResetCounter#0| state))
(declare-fun |ResetCounter#1| (|ResetCounter_s|) Bool) ; \reset
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset"], "smtname": "reset", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |ResetCounter_n reset| ((state |ResetCounter_s|)) Bool (|ResetCounter#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\flag"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |ResetCounter#2| (|ResetCounter_s|) (_ BitVec 1)) ; \flag
; yosys-smt2-output notChaos 1
; yosys-smt2-wire notChaos 1
(define-fun |ResetCounter_n notChaos| ((state |ResetCounter_s|)) Bool (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1))
; yosys-smt2-register flag 1
; yosys-smt2-wire flag 1
(define-fun |ResetCounter_n flag| ((state |ResetCounter_s|)) Bool (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1))
; yosys-smt2-register count 32
; yosys-smt2-wire count 32
(define-fun |ResetCounter_n count| ((state |ResetCounter_s|)) (_ BitVec 32) (|ResetCounter#0| state))
(declare-fun |ResetCounter#3| (|ResetCounter_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |ResetCounter_n clk| ((state |ResetCounter_s|)) Bool (|ResetCounter#3| state))
(define-fun |ResetCounter#4| ((state |ResetCounter_s|)) (_ BitVec 1) (bvnot (ite (|ResetCounter#3| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$135
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$136
(define-fun |ResetCounter_u 0| ((state |ResetCounter_s|)) Bool (or (= ((_ extract 0 0) (|ResetCounter#4| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$136
(define-fun |ResetCounter#5| ((state |ResetCounter_s|)) (_ BitVec 1) (ite (|ResetCounter#1| state) #b1 (|ResetCounter#2| state))) ; $0\flag[0:0]
(define-fun |ResetCounter#6| ((state |ResetCounter_s|)) (_ BitVec 32) (bvadd (|ResetCounter#0| state) #b00000000000000000000000000000001)) ; $add$ResetCounter.sv:24$46_Y
(define-fun |ResetCounter#7| ((state |ResetCounter_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1) (|ResetCounter#6| state) (|ResetCounter#0| state))) ; $procmux$51_Y
(define-fun |ResetCounter#8| ((state |ResetCounter_s|)) (_ BitVec 32) (ite (|ResetCounter#1| state) #b00000000000000000000000000000000 (|ResetCounter#7| state))) ; $0\count[31:0]
(define-fun |ResetCounter_a| ((state |ResetCounter_s|)) Bool true)
(define-fun |ResetCounter_u| ((state |ResetCounter_s|)) Bool 
  (|ResetCounter_u 0| state)
)
(define-fun |ResetCounter_i| ((state |ResetCounter_s|)) Bool (and
  (= (= ((_ extract 0 0) (|ResetCounter#2| state)) #b1) false) ; flag
  (= (|ResetCounter#0| state) #b00000000000000000000000000000000) ; count
))
(define-fun |ResetCounter_h| ((state |ResetCounter_s|)) Bool true)
(define-fun |ResetCounter_t| ((state |ResetCounter_s|) (next_state |ResetCounter_s|)) Bool (and
  (= (|ResetCounter#5| state) (|ResetCounter#2| next_state)) ; $procdff$113 \flag
  (= (|ResetCounter#8| state) (|ResetCounter#0| next_state)) ; $procdff$112 \count
)) ; end of module ResetCounter
; yosys-smt2-module memory
(declare-sort |memory_s| 0)
(declare-fun |memory_is| (|memory_s|) Bool)
; yosys-smt2-cell ResetCounter resetCounter
; yosys-smt2-witness {"path": ["\\resetCounter"], "smtname": "resetCounter", "type": "cell"}
(declare-fun |memory#0| (|memory_s|) (_ BitVec 32)) ; \resetCounter_timeSinceReset
(declare-fun |memory#1| (|memory_s|) Bool) ; \resetCounter_notChaos
(declare-fun |memory_h resetCounter| (|memory_s|) |ResetCounter_s|)
; yosys-smt2-wire resetCounter_timeSinceReset 32
(define-fun |memory_n resetCounter_timeSinceReset| ((state |memory_s|)) (_ BitVec 32) (|memory#0| state))
(declare-fun |memory#2| (|memory_s|) Bool) ; \reset
; yosys-smt2-wire resetCounter_reset 1
(define-fun |memory_n resetCounter_reset| ((state |memory_s|)) Bool (|memory#2| state))
; yosys-smt2-wire resetCounter_notChaos 1
(define-fun |memory_n resetCounter_notChaos| ((state |memory_s|)) Bool (|memory#1| state))
(declare-fun |memory#3| (|memory_s|) Bool) ; \clock
; yosys-smt2-wire resetCounter_clk 1
; yosys-smt2-clock resetCounter_clk posedge
(define-fun |memory_n resetCounter_clk| ((state |memory_s|)) Bool (|memory#3| state))
; yosys-smt2-input reset 1
; yosys-smt2-wire reset 1
; yosys-smt2-witness {"offset": 0, "path": ["\\reset"], "smtname": "reset", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |memory_n reset| ((state |memory_s|)) Bool (|memory#2| state))
; yosys-smt2-anyinit memory#4 256 memory.sv:51.3-125.6
; yosys-smt2-witness {"offset": 0, "path": ["\\random_data"], "smtname": 4, "smtoffset": 0, "type": "init", "width": 256}
(declare-fun |memory#4| (|memory_s|) (_ BitVec 256)) ; \random_data
; yosys-smt2-register random_data 256
; yosys-smt2-wire random_data 256
(define-fun |memory_n random_data| ((state |memory_s|)) (_ BitVec 256) (|memory#4| state))
; yosys-smt2-cell $paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010 random_addr_cst
; yosys-smt2-witness {"path": ["\\random_addr_cst"], "smtname": "random_addr_cst", "type": "cell"}
(declare-fun |memory#5| (|memory_s|) (_ BitVec 2)) ; \random_addr_cst_out
(declare-fun |memory_h random_addr_cst| (|memory_s|) |$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_s|)
; yosys-smt2-wire random_addr_cst_out 2
(define-fun |memory_n random_addr_cst_out| ((state |memory_s|)) (_ BitVec 2) (|memory#5| state))
; yosys-smt2-anyinit memory#6 256 memory.sv:51.3-125.6
; yosys-smt2-witness {"offset": 0, "path": ["\\mem_3"], "smtname": 6, "smtoffset": 0, "type": "init", "width": 256}
(declare-fun |memory#6| (|memory_s|) (_ BitVec 256)) ; \mem_3
; yosys-smt2-register mem_3 256
; yosys-smt2-wire mem_3 256
(define-fun |memory_n mem_3| ((state |memory_s|)) (_ BitVec 256) (|memory#6| state))
; yosys-smt2-anyinit memory#7 256 memory.sv:51.3-125.6
; yosys-smt2-witness {"offset": 0, "path": ["\\mem_2"], "smtname": 7, "smtoffset": 0, "type": "init", "width": 256}
(declare-fun |memory#7| (|memory_s|) (_ BitVec 256)) ; \mem_2
; yosys-smt2-register mem_2 256
; yosys-smt2-wire mem_2 256
(define-fun |memory_n mem_2| ((state |memory_s|)) (_ BitVec 256) (|memory#7| state))
; yosys-smt2-anyinit memory#8 256 memory.sv:51.3-125.6
; yosys-smt2-witness {"offset": 0, "path": ["\\mem_1"], "smtname": 8, "smtoffset": 0, "type": "init", "width": 256}
(declare-fun |memory#8| (|memory_s|) (_ BitVec 256)) ; \mem_1
; yosys-smt2-register mem_1 256
; yosys-smt2-wire mem_1 256
(define-fun |memory_n mem_1| ((state |memory_s|)) (_ BitVec 256) (|memory#8| state))
; yosys-smt2-anyinit memory#9 256 memory.sv:51.3-125.6
; yosys-smt2-witness {"offset": 0, "path": ["\\mem_0"], "smtname": 9, "smtoffset": 0, "type": "init", "width": 256}
(declare-fun |memory#9| (|memory_s|) (_ BitVec 256)) ; \mem_0
; yosys-smt2-register mem_0 256
; yosys-smt2-wire mem_0 256
(define-fun |memory_n mem_0| ((state |memory_s|)) (_ BitVec 256) (|memory#9| state))
(declare-fun |memory#10| (|memory_s|) Bool) ; \io_rst_n
; yosys-smt2-input io_rst_n 1
; yosys-smt2-wire io_rst_n 1
; yosys-smt2-witness {"offset": 0, "path": ["\\io_rst_n"], "smtname": "io_rst_n", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |memory_n io_rst_n| ((state |memory_s|)) Bool (|memory#10| state))
(declare-fun |memory#11| (|memory_s|) (_ BitVec 2)) ; \io_in_rd_addr
(define-fun |memory#12| ((state |memory_s|)) Bool (= #b01 (|memory#11| state))) ; $eq$memory.sv:30$3_Y
(define-fun |memory#13| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#12| state) (|memory#8| state) (|memory#9| state))) ; \_GEN_9
(define-fun |memory#14| ((state |memory_s|)) Bool (= #b10 (|memory#11| state))) ; $eq$memory.sv:31$5_Y
(define-fun |memory#15| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#14| state) (|memory#7| state) (|memory#13| state))) ; \_GEN_10
(define-fun |memory#16| ((state |memory_s|)) Bool (= #b11 (|memory#11| state))) ; $eq$memory.sv:48$12_Y
(define-fun |memory#17| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#16| state) (|memory#6| state) (|memory#15| state))) ; \io_out_data
; yosys-smt2-output io_out_data 256
; yosys-smt2-wire io_out_data 256
(define-fun |memory_n io_out_data| ((state |memory_s|)) (_ BitVec 256) (|memory#17| state))
(declare-fun |memory#18| (|memory_s|) (_ BitVec 2)) ; \io_in_wr_addr
; yosys-smt2-input io_in_wr_addr 2
; yosys-smt2-wire io_in_wr_addr 2
; yosys-smt2-witness {"offset": 0, "path": ["\\io_in_wr_addr"], "smtname": "io_in_wr_addr", "smtoffset": 0, "type": "input", "width": 2}
(define-fun |memory_n io_in_wr_addr| ((state |memory_s|)) (_ BitVec 2) (|memory#18| state))
(declare-fun |memory#19| (|memory_s|) Bool) ; \io_in_wr
; yosys-smt2-input io_in_wr 1
; yosys-smt2-wire io_in_wr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\io_in_wr"], "smtname": "io_in_wr", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |memory_n io_in_wr| ((state |memory_s|)) Bool (|memory#19| state))
; yosys-smt2-input io_in_rd_addr 2
; yosys-smt2-wire io_in_rd_addr 2
; yosys-smt2-witness {"offset": 0, "path": ["\\io_in_rd_addr"], "smtname": "io_in_rd_addr", "smtoffset": 0, "type": "input", "width": 2}
(define-fun |memory_n io_in_rd_addr| ((state |memory_s|)) (_ BitVec 2) (|memory#11| state))
(declare-fun |memory#20| (|memory_s|) Bool) ; \io_in_rd
; yosys-smt2-input io_in_rd 1
; yosys-smt2-wire io_in_rd 1
; yosys-smt2-witness {"offset": 0, "path": ["\\io_in_rd"], "smtname": "io_in_rd", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |memory_n io_in_rd| ((state |memory_s|)) Bool (|memory#20| state))
(declare-fun |memory#21| (|memory_s|) (_ BitVec 256)) ; \io_in_data
; yosys-smt2-input io_in_data 256
; yosys-smt2-wire io_in_data 256
; yosys-smt2-witness {"offset": 0, "path": ["\\io_in_data"], "smtname": "io_in_data", "smtoffset": 0, "type": "input", "width": 256}
(define-fun |memory_n io_in_data| ((state |memory_s|)) (_ BitVec 256) (|memory#21| state))
; yosys-smt2-input clock 1
; yosys-smt2-wire clock 1
; yosys-smt2-clock clock posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clock"], "smtname": "clock", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |memory_n clock| ((state |memory_s|)) Bool (|memory#3| state))
; yosys-smt2-anyseq memory#22 1 $auto$setundef.cc:533:execute$129
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_129"], "smtname": 22, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |memory#22| (|memory_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_129
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_129 1
(define-fun |memory_n _witness_.anyseq_auto_setundef_cc_533_execute_129| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#22| state)) #b1))
; yosys-smt2-anyseq memory#23 1 $auto$setundef.cc:533:execute$127
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_127"], "smtname": 23, "smtoffset": 0, "type": "seq", "width": 1}
(declare-fun |memory#23| (|memory_s|) (_ BitVec 1)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_127
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_127 1
(define-fun |memory_n _witness_.anyseq_auto_setundef_cc_533_execute_127| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#23| state)) #b1))
; yosys-smt2-anyinit memory#24 1 memory.sv:179.3-188.6
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyinit_procdff_116"], "smtname": 24, "smtoffset": 0, "type": "init", "width": 1}
(declare-fun |memory#24| (|memory_s|) (_ BitVec 1)) ; \_witness_.anyinit_procdff_116
; yosys-smt2-register _witness_.anyinit_procdff_116 1
; yosys-smt2-wire _witness_.anyinit_procdff_116 1
(define-fun |memory_n _witness_.anyinit_procdff_116| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#24| state)) #b1))
; yosys-smt2-wire _mem_T_3 256
(define-fun |memory_n _mem_T_3| ((state |memory_s|)) (_ BitVec 256) (concat ((_ extract 127 0) (|memory#21| state)) ((_ extract 255 128) (|memory#21| state))))
(define-fun |memory#25| ((state |memory_s|)) Bool (= (|memory#18| state) (|memory#5| state))) ; $eq$memory.sv:34$8_Y
(define-fun |memory#26| ((state |memory_s|)) (_ BitVec 1) (bvand (ite (|memory#19| state) #b1 #b0) (ite (|memory#25| state) #b1 #b0))) ; \_T_6
; yosys-smt2-wire _T_6 1
(define-fun |memory_n _T_6| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#26| state)) #b1))
(define-fun |memory#27| ((state |memory_s|)) (_ BitVec 1) (bvnot (ite (|memory#2| state) #b1 #b0))) ; \_T_3
; yosys-smt2-wire _T_3 1
(define-fun |memory_n _T_3| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#27| state)) #b1))
(define-fun |memory#28| ((state |memory_s|)) Bool (= (|memory#11| state) (|memory#5| state))) ; $eq$memory.sv:35$10_Y
(define-fun |memory#29| ((state |memory_s|)) (_ BitVec 1) (bvand (ite (|memory#20| state) #b1 #b0) (ite (|memory#28| state) #b1 #b0))) ; \_T_22
; yosys-smt2-wire _T_22 1
(define-fun |memory_n _T_22| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#29| state)) #b1))
; yosys-smt2-wire _GEN_9 256
(define-fun |memory_n _GEN_9| ((state |memory_s|)) (_ BitVec 256) (|memory#13| state))
; yosys-smt2-wire _GEN_10 256
(define-fun |memory_n _GEN_10| ((state |memory_s|)) (_ BitVec 256) (|memory#15| state))
; yosys-smt2-witness {"offset": 0, "path": ["$formal$memory.sv:185$2_EN"], "smtname": 30, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |memory#30| (|memory_s|) (_ BitVec 1)) ; $formal$memory.sv:185$2_EN
; yosys-smt2-register $formal$memory.sv:185$2_EN 1
(define-fun |memory_n $formal$memory.sv:185$2_EN| ((state |memory_s|)) Bool (= ((_ extract 0 0) (|memory#30| state)) #b1))
(define-fun |memory#31| ((state |memory_s|)) (_ BitVec 1) (bvnot (ite (|memory#3| state) #b1 #b0))) ; $auto$rtlil.cc:2461:Not$132
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$133
(define-fun |memory_u 0| ((state |memory_s|)) Bool (or (= ((_ extract 0 0) (|memory#31| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$133
(define-fun |memory#32| ((state |memory_s|)) (_ BitVec 1) (bvand (ite (|memory#19| state) #b1 #b0) (ite (|memory#20| state) #b1 #b0))) ; $and$memory.sv:182$33_Y
(define-fun |memory#33| ((state |memory_s|)) (_ BitVec 1) (bvnot (|memory#32| state))) ; $not$memory.sv:182$34_Y
(define-fun |memory#34| ((state |memory_s|)) (_ BitVec 1) (ite (|memory#2| state) (|memory#23| state) (|memory#33| state))) ; $0$formal$memory.sv:181$1_CHECK[0:0]$28
(define-fun |memory#35| ((state |memory_s|)) (_ BitVec 1) (ite (|memory#2| state) #b0 #b1)) ; $0$formal$memory.sv:181$1_EN[0:0]$29
; yosys-smt2-assume 1 $assume$memory.sv:181$38 memory.sv:181.22-182.37
(define-fun |memory_u 1| ((state |memory_s|)) Bool (or (= ((_ extract 0 0) (|memory#34| state)) #b1) (not (= ((_ extract 0 0) (|memory#35| state)) #b1)))) ; $assume$memory.sv:181$38
; yosys-smt2-assert 0 $assert$memory.sv:185$39 memory.sv:185.52-186.41
(define-fun |memory_a 0| ((state |memory_s|)) Bool (or (= ((_ extract 0 0) (|memory#24| state)) #b1) (not (= ((_ extract 0 0) (|memory#30| state)) #b1)))) ; $assert$memory.sv:185$39
(define-fun |memory#36| ((state |memory_s|)) (_ BitVec 1) (bvand (|memory#29| state) (ite (|memory#1| state) #b1 #b0))) ; $and$memory.sv:185$35_Y
(define-fun |memory#37| ((state |memory_s|)) (_ BitVec 1) (bvand (|memory#36| state) (|memory#27| state))) ; $and$memory.sv:185$36_Y
(define-fun |memory#38| ((state |memory_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|memory#37| state)) #b1) #b1 #b0)) ; $0$formal$memory.sv:185$2_EN[0:0]$31
(define-fun |memory#39| ((state |memory_s|)) Bool (= (|memory#17| state) (|memory#4| state))) ; $eq$memory.sv:186$37_Y
(define-fun |memory#40| ((state |memory_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|memory#37| state)) #b1) (ite (|memory#39| state) #b1 #b0) (|memory#22| state))) ; $0$formal$memory.sv:185$2_CHECK[0:0]$30
(define-fun |memory#41| ((state |memory_s|)) Bool (bvult (|memory#18| state) #b10)) ; $lt$memory.sv:56$16_Y
(define-fun |memory#42| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#41| state) (|memory#21| state) (concat ((_ extract 127 0) (|memory#21| state)) ((_ extract 255 128) (|memory#21| state))))) ; $procmux$103_Y
(define-fun |memory#43| ((state |memory_s|)) Bool (not (or  (= ((_ extract 0 0) (|memory#18| state)) #b1) (= ((_ extract 1 1) (|memory#18| state)) #b1)))) ; $eq$memory.sv:55$15_Y
(define-fun |memory#44| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#43| state) (|memory#42| state) (|memory#9| state))) ; $procmux$105_Y
(define-fun |memory#45| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#19| state) (|memory#44| state) (|memory#9| state))) ; $procmux$107_Y
(define-fun |memory#46| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#2| state) #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|memory#45| state))) ; $0\mem_0[255:0]
(define-fun |memory#47| ((state |memory_s|)) Bool (= #b01 (|memory#18| state))) ; $eq$memory.sv:66$17_Y
(define-fun |memory#48| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#47| state) (|memory#42| state) (|memory#8| state))) ; $procmux$95_Y
(define-fun |memory#49| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#19| state) (|memory#48| state) (|memory#8| state))) ; $procmux$97_Y
(define-fun |memory#50| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#2| state) #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|memory#49| state))) ; $0\mem_1[255:0]
(define-fun |memory#51| ((state |memory_s|)) Bool (= #b10 (|memory#18| state))) ; $eq$memory.sv:77$19_Y
(define-fun |memory#52| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#51| state) (|memory#42| state) (|memory#7| state))) ; $procmux$85_Y
(define-fun |memory#53| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#19| state) (|memory#52| state) (|memory#7| state))) ; $procmux$87_Y
(define-fun |memory#54| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#2| state) #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|memory#53| state))) ; $0\mem_2[255:0]
(define-fun |memory#55| ((state |memory_s|)) Bool (= #b11 (|memory#18| state))) ; $eq$memory.sv:88$21_Y
(define-fun |memory#56| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#55| state) (|memory#42| state) (|memory#6| state))) ; $procmux$75_Y
(define-fun |memory#57| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#19| state) (|memory#56| state) (|memory#6| state))) ; $procmux$77_Y
(define-fun |memory#58| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#2| state) #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|memory#57| state))) ; $0\mem_3[255:0]
(define-fun |memory#59| ((state |memory_s|)) (_ BitVec 256) (ite (= ((_ extract 0 0) (|memory#26| state)) #b1) (concat ((_ extract 127 0) (|memory#21| state)) ((_ extract 255 128) (|memory#21| state))) (|memory#4| state))) ; $procmux$64_Y
(define-fun |memory#60| ((state |memory_s|)) Bool (bvult (|memory#5| state) #b10)) ; $lt$memory.sv:98$25_Y
(define-fun |memory#61| ((state |memory_s|)) (_ BitVec 1) (bvand (|memory#26| state) (ite (|memory#60| state) #b1 #b0))) ; $and$memory.sv:98$26_Y
(define-fun |memory#62| ((state |memory_s|)) (_ BitVec 256) (ite (= ((_ extract 0 0) (|memory#61| state)) #b1) (|memory#21| state) (|memory#59| state))) ; $procmux$67_Y
(define-fun |memory#63| ((state |memory_s|)) (_ BitVec 256) (ite (|memory#2| state) #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (|memory#62| state))) ; $0\random_data[255:0]
(define-fun |memory_a| ((state |memory_s|)) Bool (and
  (|memory_a 0| state)
  (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_a| (|memory_h random_addr_cst| state))
  (|ResetCounter_a| (|memory_h resetCounter| state))
))
(define-fun |memory_u| ((state |memory_s|)) Bool (and
  (|memory_u 0| state)
  (|memory_u 1| state)
  (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_u| (|memory_h random_addr_cst| state))
  (|ResetCounter_u| (|memory_h resetCounter| state))
))
(define-fun |memory_i| ((state |memory_s|)) Bool (and
  (= (= ((_ extract 0 0) (|memory#30| state)) #b1) false) ; $formal$memory.sv:185$2_EN
  (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_i| (|memory_h random_addr_cst| state))
  (|ResetCounter_i| (|memory_h resetCounter| state))
))
(define-fun |memory_h| ((state |memory_s|)) Bool (and
  (= (|memory_is| state) (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_is| (|memory_h random_addr_cst| state)))
  (= (|memory#5| state) (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_n out| (|memory_h random_addr_cst| state))) ; $paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010.out
  (= (|memory_is| state) (|ResetCounter_is| (|memory_h resetCounter| state)))
  (= (|memory#0| state) (|ResetCounter_n timeSinceReset| (|memory_h resetCounter| state))) ; ResetCounter.timeSinceReset
  (= (|memory#2| state) (|ResetCounter_n reset| (|memory_h resetCounter| state))) ; ResetCounter.reset
  (= (|memory#1| state) (|ResetCounter_n notChaos| (|memory_h resetCounter| state))) ; ResetCounter.notChaos
  (= (|memory#3| state) (|ResetCounter_n clk| (|memory_h resetCounter| state))) ; ResetCounter.clk
  (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_h| (|memory_h random_addr_cst| state))
  (|ResetCounter_h| (|memory_h resetCounter| state))
))
(define-fun |memory_t| ((state |memory_s|) (next_state |memory_s|)) Bool (and
  (= (|memory#38| state) (|memory#30| next_state)) ; $procdff$117 $formal$memory.sv:185$2_EN
  (= (|memory#40| state) (|memory#24| next_state)) ; $procdff$116 \_witness_.anyinit_procdff_116
  (= (|memory#46| state) (|memory#9| next_state)) ; $procdff$118 \mem_0
  (= (|memory#50| state) (|memory#8| next_state)) ; $procdff$119 \mem_1
  (= (|memory#54| state) (|memory#7| next_state)) ; $procdff$120 \mem_2
  (= (|memory#58| state) (|memory#6| next_state)) ; $procdff$121 \mem_3
  (= (|memory#63| state) (|memory#4| next_state)) ; $procdff$122 \random_data
  (|$paramod/AnyConst/WIDTH=s32'00000000000000000000000000000010_t| (|memory_h random_addr_cst| state) (|memory_h random_addr_cst| next_state))
  (|ResetCounter_t| (|memory_h resetCounter| state) (|memory_h resetCounter| next_state))
)) ; end of module memory
; yosys-smt2-topmod memory
; end of yosys output
